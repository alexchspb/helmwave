name: Goreleaser

on:
  push:
    tags: ["v*"]

jobs:
  goreleaser:
    runs-on: ubuntu-latest
    permissions:
      contents: write # to create release
      issues: write # to close milestone
      packages: write # to upload package
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ needs.tagger.outputs.tag }}

      - name: Setup QEMU
        uses: docker/setup-qemu-action@v3

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # https://github.com/orgs/community/discussions/25678#discussioncomment-5242449
      - name: Delete huge unnecessary tools folder
        run: rm -rf /opt/hostedtoolcache

      - uses: actions/setup-go@v5
        with:
          go-version-file: go.mod

      - name: Download changelog artifact
        uses: actions/download-artifact@v4
        with:
          name: changelog

      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v6
        with:
          version: latest
          args: release --skip=validate --clean --release-notes ${{ needs.tagger.outputs.tag }}.md
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          HOMEBREW_TAP_GITHUB_TOKEN: ${{ secrets.CR_PAT }}
          TELEGRAM_TOKEN: ${{ secrets.BOT_TOKEN }}

      - name: Generate schema.json
        run: ./dist/helmwave_linux_amd64_v1/helmwave schema > schema.json

      - name: Upload schema.json
        uses: xresloader/upload-to-github-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          file: "schema.json"
          update_latest_release: true

  docs:
    runs-on: ubuntu-latest
    needs:
      - tagger
    steps:
      - name: Trigger helmwave/docs workflow
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.PAT }}
          script: |
            await github.rest.actions.createWorkflowDispatch({
              owner: context.repo.owner,
              repo: "docs",
              workflow_id: "generate-new-version.yml",
              ref: "main",
              inputs: {
                tag: process.env.GITHUB_TAG,
              },
            })
        env:
          GITHUB_TAG: ${{ needs.tagger.outputs.tag }}
